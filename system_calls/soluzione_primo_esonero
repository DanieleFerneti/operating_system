#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>
#include <assert.h>
#include <ctype.h>
#include <string.h>
#include "sort.h"
#include <sys/types.h>
#include <sys/stat.h>
#include <bits/getopt_core.h>

//(to sort) compare method
int compare_records(const void *a, const void *b) {
    return ((rec_t *)a)->key - ((rec_t *)b)->key;
    
}

rec_t* load(char* path, int* n_records) {
    //LOAD FILE DATA INTO AN ARRAY
    int fd = open(path,O_RDONLY);

    if(fd<0) {
        printf("error while opening file");
        exit(-1);
    }

    //calculate file size using stat
    struct stat stats;    
    fstat(fd, &stats);

    //calculate the number of entries (from file) based on their weight
    n_records = stats.st_size/sizeof(rec_t);
    
    //create a struct according to the file dimension
    rec_t* records = (rec_t *)malloc(*n_records * sizeof(rec_t));
       
    //read data from file and put it in the array
    for (int i=0; i<n_records; i++) {
		read(fd, &records[i], sizeof(rec_t));
	}

    close(fd);
    return records;        
    
}

void save(rec_t* records, int* n_records) {
    char* outPath = "sorted";
    int fd = open(outPath, O_CREAT|O_WRONLY|O_TRUNC, S_IRWXU);
	if (fd == -1) {
		perror("Errore nella open: ");
		exit(-1);
	}

    for(int i=0; i<n_records; i++) {
        write(fd, &records[i], sizeof(rec_t));
    }
    close(fd);
}

int main(int argc, char* argv[]) {
    int* n_records;
  
    //check if path is given as argument
    if(argc != 2) {
        printf("Devi fornire il nome del file, riprova");
        exit(-1);
    }
    char* path = argv[1];

    //load data from file
    rec_t* records = 
    load(*path, n_records);

    //sort the array
    qsort(records, n_records, sizeof(rec_t), compare_records);

    //save the array data to a new file
    save(records, n_records);
    
}
